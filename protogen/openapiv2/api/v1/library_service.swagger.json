{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/library_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "LibraryService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/{name}": {
      "get": {
        "summary": "Gets a book information.",
        "operationId": "LibraryService_GetBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Book"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The field will contain name of the resource requested, for example:\n\"shelves/shelf1/books/book2\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "shelves/[^/]+/books/[^/]+"
          }
        ],
        "tags": [
          "LibraryService"
        ]
      }
    },
    "/v1/{parent}/books": {
      "get": {
        "summary": "List the books in a shelf.",
        "operationId": "LibraryService_ListBooks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBooksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Required. The parent resource name, for example, \"shelves/shelf1\".",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "shelves/[^/]+"
          },
          {
            "name": "pageSize",
            "description": "The maximum number of items to return.\nIf empty, the default size is used.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "The next_page_token value returned from a previous List request, if any.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LibraryService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Book": {
      "type": "object",
      "properties": {
        "isbn": {
          "type": "string",
          "title": "A non-empty value.\nHas the ISBN format: https://en.wikipedia.org/wiki/International_Standard_Book_Number"
        },
        "title": {
          "type": "string",
          "description": "A non-empty value.\nMust have less than 255 characters."
        },
        "author": {
          "type": "string",
          "description": "A non-empty value.\nMust have less than 255 characters."
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "Output only. Time when book was added into the library.",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Output only. Time when book was last updated in the library.\nEqual to create_time if create request.",
          "readOnly": true
        }
      }
    },
    "v1ListBooksResponse": {
      "type": "object",
      "properties": {
        "books": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Book"
          },
          "description": "Books present in the shelf.\nThere will be a maximum number of items returned based on the\npage_size field in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list."
        }
      }
    }
  }
}
